#@ load("@ytt:data", "data")
#@ load("@ytt:yaml", "yaml")

---
#@ def config():
profile: build
ceip_policy_disclosed: true
shared:
  ingress_domain: #@ data.values.tap.domains.main
  kubernetes_version: "1.24.9"
  image_registry:
    project_path: #@ "{}/{}".format(data.values.tap.registry.host, data.values.tap.registry.repositories.repoName)
    username: #@ data.values.tap.credentials.registry.username
    password: #@ data.values.tap.credentials.registry.password

supply_chain: testing_scanning
ootb_supply_chain_testing_scanning:
  registry:
    server: #@ data.values.tap.registry.host
    repository: #@ data.values.tap.registry.repositories.ootbSupplyChain
  gitops:
    server_address: https://github.com/
    ssh_secret: git-ssh
    repository_owner: ynamadi
    commit_strategy: pull_request
    branch: "main"
    username: supplychain
    email: supplychain
    commit_message: supplychain@cluster.local
    pull_request:
      server_kind: github
      pull_request_title: "Ready for review"
      pull_request_body: "Generated by Supply Chain"
      commit_branch: ""
  scanning:
    source:
      policy: scan-policy
      template: blob-source-scan-template
    image:
      template: snyk-private-image-scan-template
      policy: snyk-scan-policy

scanning:
  metadataStore:
    url: ""

grype:
  namespace: #@ data.values.tap.devNamespace
  targetImagePullSecret: "registry-credentials"
  metadataStore:
    url:  #@ "https://{}".format(data.values.tap.domains.metadataStore)
    caSecret:
      name: store-ca-cert
      importFromNamespace: metadata-store-secrets
    authSecret:
      name: store-auth-token
      importFromNamespace: metadata-store-secrets


#@ end
---
apiVersion: v1
kind: Secret
metadata:
  name: tap-values
  namespace: #@ data.values.tap.namespace
type: Opaque
stringData:
  values.yml: #@ yaml.encode(config())
---
apiVersion: packaging.carvel.dev/v1alpha1
kind: PackageInstall
metadata:
  name: tap
  namespace: #@ data.values.tap.namespace
  annotations:
    kapp.k14s.io/change-group: tap
    kapp.k14s.io/change-rule: "upsert after upserting tap-install/rbac"
    kapp.k14s.io/change-rule.repo: "upsert after upserting tap-install/tap-repo"
    ext.packaging.carvel.dev/ytt-paths-from-secret-name.0: "custom-labels"
spec:
  packageRef:
    refName: tap.tanzu.vmware.com
    versionSelection:
      constraints: #@ str(data.values.tap.version)
      prereleases: {}
  serviceAccountName: tap-default-sa
  values:
  - secretRef:
      name: tap-values
---
apiVersion: v1
kind: Secret
metadata:
  name: custom-labels
  namespace: #@ data.values.tap.namespace
stringData:
  add-custom-labels.yml: |
    #@ load("@ytt:overlay", "overlay")
    
    #@overlay/match by=overlay.subset({"kind":"PackageInstall"}),expects="1+"
    ---
    metadata:
      #@overlay/match missing_ok=True
      annotations:
        #@overlay/match missing_ok=True
        ext.packaging.carvel.dev/ytt-paths-from-secret-name.0: my-custom-labels
    
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      name: my-custom-labels
    stringData:
      add-my-custom-labels.yml: |
        #@ load("@ytt:overlay", "overlay")
    
        #@overlay/match by=overlay.subset({"kind": "Namespace"}),expects="0+"
        ---
        metadata:
          #@overlay/match missing_ok=True
          labels:
            #@overlay/match missing_ok=True
            istio-injection: "false"
            #@overlay/match missing_ok=True
            tmc-policy: "false"
